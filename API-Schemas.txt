#===========================================================================================================
session.py
#===========================================================================================================
from sqlalchemy import create_engine

engine = create_engine(
    'mssql+pymssql://preset:Adm1np3set19@mattilda-prod.database.windows.net/mattilda-prod',
    echo=True,
)

#===========================================================================================================
api.py
#===========================================================================================================

from fastapi import APIRouter

from api.v100.routes import students, responsibles, schools, concepts, campus, charges, discounts, schoolarships, payments

router = APIRouter()

router.include_router(students.router, prefix="/students")
router.include_router(responsibles.router, prefix="/responsibles")
router.include_router(schools.router, prefix="/schools")
router.include_router(concepts.router, prefix="/concepts")
router.include_router(campus.router, prefix="/campus")
router.include_router(charges.router, prefix="/charges")
router.include_router(discounts.router, prefix="/charges")
router.include_router(schoolarships.router, prefix="/schoolarships")
router.include_router(payments.router, prefix="/payments")




#===========================================================================================================
Schemas
#===========================================================================================================

from datetime import datetime
from typing import Optional

from pydantic import BaseModel

class CampusRead(BaseModel):
    campus_name: str
    street: Optional[str] = None
    suburb: Optional[str] = None
    suburb_id: str
    municipality_id: Optional[str] = None
    state_id: Optional[str] = None
    zip: str
    college_id: str
    status_id: str
    registration_date: datetime

class CampusbynameRead(BaseModel):
    campus_id: int
    campus_name: str
    street: Optional[str] = None
    suburb: Optional[str] = None
    suburb_id: str
    municipality_id: Optional[str] = None
    state_id: Optional[str] = None
    zip: str
    college_id: str
    status_id: str
    registration_date: datetime            
            
#===========================================================================================================	

from datetime import date, datetime

from typing import Optional

from pydantic import BaseModel

class ChargesRead(BaseModel):
    transaction_id: int
    period: Optional[str] = None
    concept: Optional[str] = None
    concept_id: Optional[str] = None
    amount: str
    balance: str
    userid: int
    expiration_date: date
    registration_date: datetime
    transaction_id_old: Optional[str] = None
  
class ChargesbynameRead(BaseModel):   
    alumno_id: int
    transaction_id: int
    period: Optional[str] = None
    concept: Optional[str] = None
    concept_id: Optional[str] = None
    amount: str
    balance: str
    userid: int
    expiration_date: date
    registration_date: datetime
    transaction_id_old: Optional[str] = None
	
#===========================================================================================================	

from datetime import datetime

from typing import Optional, Union

from pydantic import BaseModel

class ConceptRead(BaseModel):
    concept: Optional[str] = None
    category: Union[str, int]
    provserv_key: Optional[int] = None
    unit_key: Union[str, int]
    college_id: int 
    period_id: Optional[int] = None
    program_id: Optional[int] = None
    level_id: Optional[int] = None
    registration_date: datetime

class ConceptbynameRead(BaseModel):
    concept_id: Union[str, int]
    concept: Optional[str] = None
    category: Union[str, int]
    provserv_key: Optional[int] = None
    unit_key: Union[str, int]
    college_id: int 
    period_id: Optional[int] = None
    program_id: Optional[int] = None
    level_id: Optional[int] = None
    registration_date: datetime
	
#===========================================================================================================	

from datetime import datetime

from sys import float_repr_style

from typing import Optional

from pydantic import BaseModel

class DiscountsRead(BaseModel):
    concept_id: str
    desctype_id: int
    days_period: Optional[str] = None
    date_application: Optional[datetime] = None
    type_amount: str
    percentage: Optional[float] = None
    amount: Optional[float] = None
    concept_id_applies: str
    status_id: str
    user_id: int
    activity_date: datetime

class DiscountstypeRead(BaseModel):
    config_id_d: int
    concept_id: str
    desctype_id: int
    days_period: Optional[str] = None
    date_application: Optional[datetime] = None
    type_amount: str
    percentage: Optional[float] = None
    amount: Optional[float] = None
    concept_id_applies: str
    status_id: str
    user_id: int
    activity_date: datetime
    
#===========================================================================================================	

from contextlib import nullcontext

from datetime import date, datetime

from typing import Union, Optional

from pydantic import BaseModel

class PaymentsRead(BaseModel):
    transact_id: int
    transaction_charge_id: str
    concepts_id: Optional[str] = None
    concepts: Optional[str] = None
    payment_amount: str
    amount_applied: str
    status_id: str
    uid_cfdi: Optional[str] = None
    payment_id: str
    user_id: int
    pay_day: date
    registration_date: datetime
    transaction_id_old: Optional[str] = None 
    transaction_id_charge_old: Optional[str] = None

class PaymentsbytransaccionRead(BaseModel):
    alumno_id: int
    transact_id: int
    transaction_charge_id: str
    concepts_id: Optional[str] = None
    concepts: Optional[str] = None
    payment_amount: str
    amount_applied: str
    status_id: str
    uid_cfdi: Optional[str] = None
    payment_id: str
    user_id: int
    pay_day: date
    registration_date: datetime   
    transaction_id_old: Optional[str] = None 
    transaction_id_charge_old: Optional[str] = None


#===========================================================================================================	

from datetime import datetime

from typing import Optional

from pydantic import BaseModel

class ResponsibleRead(BaseModel):
    responsable_name: str
    father_name: str
    mother_name: Optional[str] = None
    college_uid: Optional[str] = None
    curp: Optional[str] = None
    email: Optional[str] = None
    phone: Optional[str] = None
    contact_pref: str
    alumno_id: int
    status: str
    registration_date: datetime
    activity_date: datetime

class ResponsiblebynameRead(BaseModel):
    responsable_id: int
    responsable_name: str
    father_name: str
    mother_name: Optional[str] = None
    college_uid: Optional[str] = None
    curp: Optional[str] = None
    email: Optional[str] = None
    phone: Optional[str] = None
    contact_pref: str
    alumno_id: int
    status: str
    registration_date: datetime
    activity_date: datetime

#===========================================================================================================	

from datetime import datetime

from typing import Optional

from pydantic import BaseModel

class SchoolarshipsRead(BaseModel):
    config_id_b: int
    concept_id: str
    type_amount: str
    percentage: Optional[float] = None
    amount: Optional[float] = None
    concept_applies_id: str
    reason: Optional[str] = None
    status_id: str
    user_id: int
    activity_date: datetime

#===========================================================================================================	

from datetime import datetime

from typing import Optional

from pydantic import BaseModel

class SchoolRead(BaseModel):
    college_name: str
    street: Optional[str] = None
    suburb: Optional[str] = None
    suburb_id: int
    municipality_id: Optional[int] = None
    state_id: Optional[int] = None
    zip: int
    status_id: str
    registration_date: datetime
    c_cards: Optional[float] = None 
    c_oxxo: Optional[float] = None

class SchoolbynameRead(BaseModel):
    colegio_id: int
    college_name: str
    street: Optional[str] = None
    suburb: Optional[str] = None
    suburb_id: int
    municipality_id: Optional[int] = None
    state_id: Optional[int] = None
    zip: int
    status_id: str
    registration_date: datetime
    c_cards: Optional[float] = None 
    c_oxxo: Optional[float] = None

#===========================================================================================================
	
from datetime import datetime

from types import UnionType

from typing import Optional, Union

from pydantic import BaseModel

class StudentRead(BaseModel):
    num_control: Optional[int] = None
    student_name: str
    father_name: str
    mother_name: Optional[str] = None
    curp: str
    level_id: Optional[int] = None
    level: Optional[str] = None
    incorporation_key: Optional[str] = None
    college_id: int
    campus_id: Optional[str] = None
    degree: Optional[str] = None
    cluster: Optional[str] = None
    status_id: Union[str, int]
    registration_date: datetime
    
class StudentsbynameRead(BaseModel):
    alumno_id: int
    num_control: Optional[str] = None
    student_name: str
    father_name: str
    mother_name: Optional[str] = None    
    curp: str
    level_id: Optional[int] = None
    level: Optional[str] = None
    incorporation_key: Optional[str] = None
    college_id: int
    campus_id: Optional[str] = None
    degree: Optional[str] = None
    cluster: Optional[str] = None
    status_id: Union[str, int]
    registration_date: datetime

	